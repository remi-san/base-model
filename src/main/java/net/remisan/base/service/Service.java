package net.remisan.base.service;

import java.util.List;

import net.remisan.base.model.PersistableEntity;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.data.jpa.domain.Specification;
import org.springframework.validation.BindException;
import org.springframework.validation.Errors;

public interface Service<T extends PersistableEntity> {

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////// Select /////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////
    
    
    T getById(Long id);
    
    
    T getByIdEager(Long id);
    
    
    T get(Specification<T> specification);
    
    
    List<T> getByIds(List<Long> ids);
    
    
    List<T> getAll();
    
    
    List<T> getAll(Specification<T> specification);
    
    
    Page<T> getAll(Specification<T> specification, Pageable pageable);
    
    
    List<T> getAll(Specification<T> specification, Sort sort);
    
    
    long count(Specification<T> spec);
    
    
    ///////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////// Save //////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////
    
    
    T save(T obj) throws BindException;
    
    
    <S extends T> List<S> save(Iterable<S> entities) throws BindException;
    
    
    ///////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////// Delete /////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////
    
    
    void delete(T obj);
    
    
    void delete(Long id);
    
    
    void deleteAll();
    
    
    ///////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////// Util //////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////
    
    T getPersistable(T obj) throws InstantiationException, IllegalAccessException;
    
    T getNewInstance() throws InstantiationException, IllegalAccessException;
    
    Errors validate(T entity);

}
